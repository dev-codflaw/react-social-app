{"version":3,"sources":["components/Login.js","components/HeaderNav.js","components/ProfileCard.js","components/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","responseGoogle","response","a","localStorage","setItem","JSON","stringify","login","token","accessToken","email","profileObj","name","console","log","window","location","reload","fresponseGoogle","clientId","buttonText","onSuccess","onFailure","HeaderNav","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","ProfileCard","Card","text","style","width","Header","Body","Title","UserLoggedIn","Container","Jumbotron","Button","onClick","logoutUser","e","preventDefault","removeItem","GuestUser","Greeting","isLoggedIn","HomePage","useState","setLogin","setEmail","setName","useEffect","store","parse","getItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb69ad4b.chunk.js","sourcesContent":["// import React, { useState } from 'react';\nimport React from 'react';\nimport GoogleLogin from 'react-google-login';\n\n\n\nfunction Login(props){\n    // const [login, setLogin] = useState(false);\n\n    const responseGoogle = async(response) => {\n        localStorage.setItem('isGoogleUser', JSON.stringify({\n          login:true,\n          token:response.accessToken,\n          email: response.profileObj.email,\n          name: response.profileObj.name,\n        }));\n        // storeCollector()\n        console.log(response);\n        console.log(response.profileObj.email);\n        refreshPage();\n      }\n      \n      const fresponseGoogle = async(response) => {\n      \n        console.log(response);\n      }\n\n\n    function refreshPage(){\n      window.location.reload(false);\n    }\n    \n    return (\n        <>\n            <GoogleLogin\n                clientId=\"17134391804-9ofvalms637k71u7s45gl4i21o1sjp6j.apps.googleusercontent.com\"\n                buttonText=\"LOGIN WITH GOOGLE\"\n                onSuccess={responseGoogle}\n                onFailure={fresponseGoogle}\n            />\n        </>\n    );\n  }\n\n\nexport default Login;\n\n\n","// import  { useState } from 'react';\nimport React from 'react';\n\nimport Nav from 'react-bootstrap/Nav';\n// import NavDropdown from 'react-bootstrap/NavDropdown';\nimport Navbar from 'react-bootstrap/Navbar';\n\nexport default function HeaderNav(props){\n\n    \n    return (\n        <>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#\">React-Bootstrap</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n\n            {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divsider />\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown> */}\n            </Nav>\n            <Nav>\n            <Nav.Link href=\"#\">{props.name}</Nav.Link>\n            {/* <Nav.Link href=\"#\">Logout</Nav.Link> */}\n            </Nav>\n            </Navbar.Collapse>\n            </Navbar>\n        </>\n    );\n  }\n\n\n\n","import React from 'react';\nimport Card  from 'react-bootstrap/Card';\n\n\n\nfunction ProfileCard(props){\n\n    return(\n        <Card\n            bg='default'\n            text='dark'\n            style={{ width: '18rem' }}\n            className=\"mb-2\"\n         >\n        <Card.Header>Profile</Card.Header>\n        <Card.Body>\n          <Card.Title> {props.name} </Card.Title>\n          <Card.Title> {props.email} </Card.Title>\n\n        </Card.Body>\n      </Card>\n    );\n }\n\n \nexport default ProfileCard;","import React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Login from './Login'\nimport HeaderNav from '../components/HeaderNav';\n\nimport ProfileCard from  './ProfileCard'\n\nimport './HomePage.css';\n\n\n\n\n\nfunction UserLoggedIn(props) {\n\n  return (\n    <Container className=\"p-3\">\n    <Jumbotron>\n      <h1 className=\"header\">Welcome To {props.name}</h1>\n      <ProfileCard name={props.name} email={props.email}/>\n      <Button onClick={logoutUser}>Logout</Button>\n    </Jumbotron>\n    </Container>\n  );\n}\n\nfunction logoutUser(e) {\n  e.preventDefault();\n  // alert('Logout');\n  localStorage.removeItem('isGoogleUser');\n  refreshPage();\n}\n\nfunction refreshPage(){\n  window.location.reload(false);\n}\n\nfunction GuestUser(props) {\n\n  return (\n    <Container className=\"p-3\">\n    <Jumbotron>\n    <h1 className=\"header\">Welcome To {props.name}</h1>\n  \n    <Login />\n  \n    </Jumbotron>\n    </Container>\n  );\n}\n\n\n\nfunction Greeting(props) {\n  const isLoggedIn = props.isLoggedIn;\n  if (isLoggedIn) {\n    return <UserLoggedIn name={props.name} email={props.email} />;\n  }\n  return <GuestUser name={props.name}/>;\n}\n\n\n\n\nfunction HomePage(props) {\n  const [login, setLogin] = useState(false);\n  const [email, setEmail] = useState(null);\n  const [name, setName] = useState('Guest');\n\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => {\n      const store = JSON.parse(localStorage.getItem('isGoogleUser'));\n      if(store && store.login){\n        setLogin(store.login);\n        setEmail(store.email);\n        setName(store.name);\n        // alert(JSON.stringify(store.email));\n      }\n\n    }, [name, email, login]);\n\n\n    return (\n      <div className=\"App\">\n        <HeaderNav name={name} />\n        <Greeting isLoggedIn={login} name={name} email={email} />\n        {/* <ProfileCard /> */}\n\n      </div>\n    );\n}\n\nexport default HomePage;\n","import './App.css';\n\nimport HomePage from './components/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    < App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}